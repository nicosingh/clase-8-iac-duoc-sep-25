name: Terraform CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  desarrollo:
    name: Terraform Desarrollo
    runs-on: ubuntu-latest
    environment: ${{ github.job }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Azure CLI
      shell: bash
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Azure Login with Device Code
      shell: bash
      run: |
        echo "Starting Azure login with device code..."
        echo "You will see a code and URL below. Open the URL in your browser and enter the code to authenticate."
        echo ""
        az login --use-device-code
        echo ""
        echo "Azure login successful!"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.0

    - name: Create backend config
      run: |
        cat << 'EOF' > backend.tfvars
        ${{ vars.BACKEND_TFVARS }}
        EOF

    - name: Terraform Init
      run: terraform init -backend-config=backend.tfvars

    - name: Select or create Terraform workspace
      run: terraform workspace select ${{ github.job }} || terraform workspace new ${{ github.job }}

    - name: Terraform Plan
      run: terraform plan -out=tfplan-${{ github.job }}

    - name: Upload Terraform Plan as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan-${{ github.job }}
        path: tfplan-${{ github.job }}
        retention-days: 30

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan-${{ github.job }}

  plan-produccion:
    name: Terraform Produccion
    runs-on: ubuntu-latest
    needs: desarrollo

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Azure CLI
      shell: bash
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Azure Login with Device Code
      shell: bash
      run: |
        echo "Starting Azure login with device code..."
        echo "You will see a code and URL below. Open the URL in your browser and enter the code to authenticate."
        echo ""
        az login --use-device-code
        echo ""
        echo "Azure login successful!"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.0

    - name: Create backend config
      run: |
        cat << 'EOF' > backend.tfvars
        ${{ vars.BACKEND_TFVARS }}
        EOF

    - name: Terraform Init
      run: terraform init -backend-config=backend.tfvars

    - name: Select or create Terraform workspace
      run: terraform workspace select produccion || terraform workspace new produccion

    - name: Terraform Plan
      run: terraform plan -out=tfplan-produccion

    - name: Upload Terraform Plan as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: tfplan-produccion
        path: tfplan-produccion
        retention-days: 30

  produccion:
    name: Apply Terraform Produccion
    runs-on: ubuntu-latest
    needs: plan-produccion
    environment: ${{ github.job }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Azure CLI
      shell: bash
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Azure Login with Device Code
      shell: bash
      run: |
        echo "Starting Azure login with device code..."
        echo "You will see a code and URL below. Open the URL in your browser and enter the code to authenticate."
        echo ""
        az login --use-device-code
        echo ""
        echo "Azure login successful!"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.0

    - name: Create backend config
      run: |
        cat << 'EOF' > backend.tfvars
        ${{ vars.BACKEND_TFVARS }}
        EOF

    - name: Terraform Init
      run: terraform init -backend-config=backend.tfvars

    - name: Select or create Terraform workspace
      run: terraform workspace select ${{ github.job }} || terraform workspace new ${{ github.job }}

    - name: Download Terraform Plan Artifact
      uses: actions/download-artifact@v4
      with:
        name: tfplan-produccion
        path: .

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan-produccion
